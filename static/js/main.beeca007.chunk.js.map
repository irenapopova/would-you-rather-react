{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/authUser.js","components/Login.js","components/Nav.js","components/PollQuestion.js","utils/helpers.js","components/PollResult.js","components/PollTeaser.js","components/UserCard.js","components/Home.js","components/NewPoll.js","components/Leaderboard.js","components/NoMatch.js","components/App.js","actions/shared.js","reducers/index.js","reducers/authUser.js","reducers/questions.js","reducers/users.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","anna","alex","tom","melany","irena","author","timestamp","optionOne","votes","text","optionTwo","_getUsers","Promise","res","rej","setTimeout","_saveQuestion","question","authUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","concat","saveQuestionAnswer","qid","answer","_saveQuestionAnswer","RECEIVE_USERS","ADD_ANSWER_TO_USER","ADD_QUESTION_TO_USER","RECEIVE_QUESTIONS","ADD_ANSWER_TO_QUESTION","ADD_QUESTION","SET_AUTH_USER","setAuthUser","type","Login","state","loading","handleLoading","setState","Segment","Group","image","form","ConnectedLoginForm","onLoading","this","Component","LoginHeader","Header","as","block","attached","textAlign","Content","Subheader","LoginGridLayout","Grid","padded","Row","className","Column","width","Dimmer","active","inverted","Loader","content","BrandImage","Image","src","size","centered","LoginForm","value","onChange","e","handleSubmit","preventDefault","props","then","generateDropdownData","map","user","key","avatar","disabled","Form","onSubmit","color","Dropdown","placeholder","fluid","selection","scrolling","options","required","Button","positive","connect","Object","values","Nav","handleLogout","Container","Responsive","Menu","minWidth","pointing","secondary","Item","NavLink","to","exact","position","spaced","verticalAlign","labelPosition","basic","compact","icon","onClick","Fragment","maxWidth","columns","widths","floated","PollQuestion","handleChange","handleSaveQuestionAnswer","Field","Radio","label","checked","match","dispatch","addAnswerToUser","addAnswerToQuestion","catch","console","warn","colors","orange","hex","blue","red","styles","bgColor","YourVoteLabel","Label","ribbon","Icon","style","float","PollResult","handleClick","history","push","optionOneVotes","length","optionTwoVotes","votesTotal","userVote","option1","option2","fontWeight","backgroundColor","Progress","percent","toFixed","progress","withRouter","PollTeaser","viewPoll","prevState","unanswered","buttonColor","buttonContent","pollTypes","POLL_TEASER","POLL_QUESTION","POLL_RESULT","PollContent","pollType","UserCard","badPath","log","tabColor","borderTop","grey","divided","question_id","undefined","params","keys","includes","Home","userQuestionData","Tab","panes","menuItem","render","Pane","answered","answeredIds","filter","sort","a","b","NewPoll","validSubmit","isLoading","target","handleSaveQuestion","Input","Divider","horizontal","addQuestion","addQuestionToUser","trophyColor","Leaderboard","leaderboardData","idx","corner","answerCount","questionCount","circular","propType","PropType","array","isRequired","total","reverse","slice","NoMatch","App","handleInitialData","path","component","ContentGrid","children","all","receiveQuestions","receiveUsers","combineReducers","action","logger","store","next","group","returnValue","getState","groupEnd","applyMiddleware","thunk","createStore","rootReducer","middleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.beeca007.chunk.js","sourcesContent":["let users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: '/images/avatars/avatar1.png',\r\n    answers: {\r\n      '8xf0y6ziyjabvozdd253nd': 'optionOne',\r\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n      am8ehyc8byjqgar0jgpub9: 'optionTwo',\r\n      loxhs1bqm25b708cmbf3g: 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: '/images/avatars/avatar2.png',\r\n    answers: {\r\n      vthrdm985a262al8qx3do: 'optionOne',\r\n      xj352vofupe1dqz9emx13r: 'optionTwo'\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do']\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: '/images/avatars/avatar3.png',\r\n    answers: {\r\n      xj352vofupe1dqz9emx13r: 'optionOne',\r\n      vthrdm985a262al8qx3do: 'optionTwo',\r\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r']\r\n  },\r\n  anna: {\r\n    id: 'anna',\r\n    name: 'Anna',\r\n    avatarURL: '/images/avatars/avatar4.png',\r\n    answers: {},\r\n    questions: []\r\n  },\r\n  alex: {\r\n    id: 'alex',\r\n    name: 'Alex',\r\n    avatarURL: '/images/avatars/avatar5.png',\r\n    answers: {},\r\n    questions: []\r\n  },\r\n  tom: {\r\n    id: 'tom',\r\n    name: 'Tom',\r\n    avatarURL: '/images/avatars/avatar6.png',\r\n    answers: {},\r\n    questions: []\r\n  },\r\n  melany: {\r\n    id: 'melany',\r\n    name: 'Melany',\r\n    avatarURL: '/images/avatars/avatar7.png',\r\n    answers: {},\r\n    questions: []\r\n  },\r\n  irena: {\r\n    id: 'irena',\r\n    name: 'Irena',\r\n    avatarURL: '/images/avatars/avatar8.png',\r\n    answers: {},\r\n    questions: []\r\n  }\r\n};\r\n\r\nlet questions = {\r\n  '8xf0y6ziyjabvozdd253nd': {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory'\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  '6ni6ok3ym7mf1p33lnez': {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero'\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'sarahedo'],\r\n      text: 'become a supervillain'\r\n    }\r\n  },\r\n  am8ehyc8byjqgar0jgpub9: {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic'\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  loxhs1bqm25b708cmbf3g: {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer'\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  vthrdm985a262al8qx3do: {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnes',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnes'],\r\n      text: 'find $50 yourself'\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  xj352vofupe1dqz9emx13r: {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript'\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  }\r\n};\r\n\r\nfunction generateUID() {\r\n  return (\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15) +\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15)\r\n  );\r\n}\r\n\r\nexport function _getUsers() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...users }), 1000);\r\n  });\r\n}\r\n\r\nexport function _getQuestions() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...questions }), 1000);\r\n  });\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText\r\n    }\r\n  };\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n  return new Promise((res, rej) => {\r\n    const authUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      };\r\n\r\n      users = {\r\n        ...users,\r\n        [authUser]: {\r\n          ...users[authUser],\r\n          questions: users[authUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      };\r\n\r\n      res(formattedQuestion);\r\n    }, 1000);\r\n  });\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authUser]: {\r\n          ...users[authUser],\r\n          answers: {\r\n            ...users[authUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      };\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authUser])\r\n          }\r\n        }\r\n      };\r\n\r\n      res();\r\n    }, 500);\r\n  });\r\n}\r\n","import {\n  _getUsers,\n  _getQuestions,\n  _saveQuestion,\n  _saveQuestionAnswer\n} from './_DATA';\n\nexport function getInitialData() {\n  return Promise.all([_getUsers(), _getQuestions()]).then(\n    ([users, questions]) => ({\n      users,\n      questions\n    })\n  );\n}\n\nexport function saveQuestion(question) {\n  return _saveQuestion(question);\n}\n\nexport function saveQuestionAnswer(authUser, qid, answer) {\n  return _saveQuestionAnswer({ authUser, qid, answer });\n}\n","import { saveQuestionAnswer } from '../utils/api';\r\nimport { addAnswerToQuestion } from '../actions/questions';\r\n\r\nexport const RECEIVE_USERS = 'RECEIVE_USERS';\r\nexport const ADD_ANSWER_TO_USER = 'ADD_ANSWER_TO_USER';\r\nexport const ADD_QUESTION_TO_USER = 'ADD_QUESTION_TO_USER';\r\n\r\nexport function receiveUsers(users) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    users\r\n  };\r\n}\r\n\r\nfunction addAnswerToUser(authUser, qid, answer) {\r\n  return {\r\n    type: ADD_ANSWER_TO_USER,\r\n    authUser,\r\n    qid,\r\n    answer\r\n  };\r\n}\r\n\r\nexport function handleSaveQuestionAnswer(authUser, qid, answer) {\r\n  return dispatch => {\r\n    dispatch(addAnswerToUser(authUser, qid, answer));\r\n    dispatch(addAnswerToQuestion(authUser, qid, answer));\r\n\r\n    return saveQuestionAnswer(authUser, qid, answer).catch(e => {\r\n      console.warn('Error in handleSaveQuestionAnswer:', e);\r\n    });\r\n  };\r\n}\r\n\r\nexport function addQuestionToUser({ id, author }) {\r\n  return {\r\n    type: ADD_QUESTION_TO_USER,\r\n    id,\r\n    author\r\n  };\r\n}\r\n","import { saveQuestion } from '../utils/api';\r\nimport { addQuestionToUser } from '../actions/users';\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\r\nexport const ADD_ANSWER_TO_QUESTION = 'ADD_ANSWER_TO_QUESTION';\r\nexport const ADD_QUESTION = 'ADD_QUESTION';\r\n\r\nexport function receiveQuestions(questions) {\r\n  return {\r\n    type: RECEIVE_QUESTIONS,\r\n    questions\r\n  };\r\n}\r\n\r\nexport function addAnswerToQuestion(authUser, qid, answer) {\r\n  return {\r\n    type: ADD_ANSWER_TO_QUESTION,\r\n    authUser,\r\n    qid,\r\n    answer\r\n  };\r\n}\r\n\r\nfunction addQuestion(question) {\r\n  return {\r\n    type: ADD_QUESTION,\r\n    question\r\n  };\r\n}\r\n\r\nexport function handleSaveQuestion(optionOneText, optionTwoText, author) {\r\n  return dispatch => {\r\n    return saveQuestion({ optionOneText, optionTwoText, author }).then(\r\n      question => {\r\n        dispatch(addQuestion(question));\r\n        dispatch(addQuestionToUser(question));\r\n      }\r\n    );\r\n  };\r\n}\r\n","export const SET_AUTH_USER = 'SET_AUTH_USER';\r\n\r\nexport function setAuthUser(id) {\r\n  return {\r\n    type: SET_AUTH_USER,\r\n    id\r\n  };\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Form,\r\n  Loader,\r\n  Dimmer\r\n} from 'semantic-ui-react';\r\nimport { setAuthUser } from '../actions/authUser';\r\n\r\nexport class Login extends Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n  handleLoading = () => {\r\n    this.setState({ loading: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Segment.Group>\r\n          <LoginHeader />\r\n          <LoginGridLayout\r\n            image={<BrandImage />}\r\n            form={<ConnectedLoginForm onLoading={this.handleLoading} />}\r\n            loading={this.state.loading}\r\n          />\r\n        </Segment.Group>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginHeader = () => (\r\n  <Header as=\"h4\" block attached=\"top\" textAlign=\"center\">\r\n    <Header.Content>Welcome to Would You Rather Game!</Header.Content>\r\n    <Header.Subheader>Please sign in to continue</Header.Subheader>\r\n  </Header>\r\n);\r\n\r\nconst LoginGridLayout = ({ image, form, loading }) => (\r\n  <div>\r\n    <Grid padded textAlign=\"center\">\r\n      <Grid.Row className=\"login\">\r\n        <Grid.Column width={16}>\r\n          {loading === true && (\r\n            <Dimmer active inverted>\r\n              <Loader inverted content=\"Loading\" />\r\n            </Dimmer>\r\n          )}\r\n          {image}\r\n          <br />\r\n          {form}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  </div>\r\n);\r\n\r\nconst BrandImage = () => (\r\n  <Image src=\"/images/avatars/avatars1.png\" size=\"medium\" centered />\r\n);\r\n\r\nclass LoginForm extends Component {\r\n  static propTypes = {\r\n    onLoading: PropTypes.func.isRequired\r\n  };\r\n  state = {\r\n    value: ''\r\n  };\r\n  onChange = (e, { value }) => {\r\n    this.setState({ value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { onLoading, setAuthUser } = this.props;\r\n    const authUser = this.state.value;\r\n\r\n    new Promise((res, rej) => {\r\n      onLoading();\r\n      setTimeout(() => res(), 500);\r\n    }).then(() => setAuthUser(authUser));\r\n  };\r\n  generateDropdownData = () => {\r\n    const { users } = this.props;\r\n\r\n    return users.map(user => ({\r\n      key: user.id,\r\n      text: user.name,\r\n      value: user.id,\r\n      image: { avatar: true, src: user.avatarURL }\r\n    }));\r\n  };\r\n  render() {\r\n    const { value } = this.state;\r\n    const disabled = value === '' ? true : false;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Header as=\"h2\" color=\"blue\">\r\n          Sign In\r\n        </Header>\r\n        <Form.Dropdown\r\n          placeholder=\"Select a Friend\"\r\n          fluid\r\n          selection\r\n          scrolling\r\n          options={this.generateDropdownData()}\r\n          value={value}\r\n          onChange={this.onChange}\r\n          required\r\n        />\r\n        <Form.Button content=\"Login\" positive disabled={disabled} fluid />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst ConnectedLoginForm = connect(\r\n  mapStateToProps,\r\n  { setAuthUser }\r\n)(LoginForm);\r\n\r\nfunction mapStateToProps({ users }) {\r\n  return {\r\n    users: Object.values(users)\r\n  };\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Menu,\r\n  Responsive,\r\n  Image,\r\n  Grid,\r\n  Button,\r\n  Container\r\n} from 'semantic-ui-react';\r\nimport { setAuthUser } from '../actions/authUser';\r\n\r\nclass Nav extends Component {\r\n  handleLogout = e => {\r\n    e.preventDefault();\r\n    this.props.setAuthUser(null);\r\n  };\r\n\r\n  render() {\r\n    const { authUser, users } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <Responsive as={Menu} minWidth={651} pointing secondary>\r\n          <Menu.Item name=\"home\" as={NavLink} to=\"/\" exact />\r\n          <Menu.Item name=\"new poll\" as={NavLink} to=\"/add\" />\r\n          <Menu.Item name=\"leader board\" as={NavLink} to=\"/leaderboard\" />\r\n          <Menu.Menu position=\"right\">\r\n            <Menu.Item>\r\n              <span>\r\n                <Image\r\n                  src={users[authUser].avatarURL}\r\n                  avatar\r\n                  spaced=\"right\"\r\n                  verticalAlign=\"bottom\"\r\n                />\r\n                {users[authUser].name}\r\n              </span>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Button\r\n                content=\"Logout\"\r\n                labelPosition=\"right\"\r\n                basic\r\n                compact\r\n                icon=\"log out\"\r\n                size=\"mini\"\r\n                color=\"red\"\r\n                /* style={{ backgroundColor: 'red' }} */\r\n                onClick={this.handleLogout}\r\n              />\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        </Responsive>\r\n        <Responsive as={Fragment} minWidth={375} maxWidth={650}>\r\n          <Grid columns={2} padded=\"vertically\">\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Image\r\n                  src={users[authUser].avatarURL}\r\n                  avatar\r\n                  spaced=\"right\"\r\n                  verticalAlign=\"bottom\"\r\n                />\r\n                {users[authUser].name}\r\n              </Grid.Column>\r\n              <Grid.Column verticalAlign=\"bottom\" textAlign=\"right\">\r\n                <Button\r\n                  content=\"Logout\"\r\n                  labelPosition=\"right\"\r\n                  basic\r\n                  compact\r\n                  icon=\"log out\"\r\n                  size=\"mini\"\r\n                  onClick={this.handleLogout}\r\n                />\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column width={16}>\r\n                <Menu pointing secondary widths={3}>\r\n                  <Menu.Item name=\"home\" as={NavLink} to=\"/\" exact />\r\n                  <Menu.Item name=\"new poll\" as={NavLink} to=\"/add\" />\r\n                  <Menu.Item\r\n                    name=\"leader board\"\r\n                    as={NavLink}\r\n                    to=\"/leaderboard\"\r\n                  />\r\n                </Menu>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Responsive>\r\n        <Responsive as={Fragment} maxWidth={374}>\r\n          <Grid padded=\"vertically\" columns={1}>\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Image\r\n                  src={users[authUser].avatarURL}\r\n                  avatar\r\n                  spaced=\"right\"\r\n                  verticalAlign=\"bottom\"\r\n                />\r\n                {users[authUser].name}\r\n                <Button\r\n                  content=\"Logout\"\r\n                  labelPosition=\"right\"\r\n                  basic\r\n                  compact\r\n                  icon=\"log out\"\r\n                  size=\"mini\"\r\n                  floated=\"right\"\r\n                  onClick={this.handleLogout}\r\n                />\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Menu pointing secondary widths={3}>\r\n                  <Menu.Item name=\"home\" as={NavLink} to=\"/\" exact />\r\n                  <Menu.Item name=\"new poll\" as={NavLink} to=\"/add\" />\r\n                  <Menu.Item\r\n                    name=\"leader board\"\r\n                    as={NavLink}\r\n                    to=\"/leaderboard\"\r\n                  />\r\n                </Menu>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Responsive>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users, authUser }) {\r\n  return {\r\n    authUser,\r\n    users\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setAuthUser }\r\n)(Nav);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Header, Button, Form, Radio } from 'semantic-ui-react';\r\nimport { handleSaveQuestionAnswer } from '../actions/users';\r\n\r\nexport class PollQuestion extends Component {\r\n  static propTypes = {\r\n    authUser: PropTypes.string.isRequired,\r\n    handleSaveQuestionAnswer: PropTypes.func.isRequired,\r\n    question: PropTypes.object.isRequired\r\n  };\r\n\r\n  state = {\r\n    value: ''\r\n  };\r\n\r\n  handleChange = (e, { value }) => this.setState({ value });\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.value !== '') {\r\n      const { authUser, question, handleSaveQuestionAnswer } = this.props;\r\n      handleSaveQuestionAnswer(authUser, question.id, this.state.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { question } = this.props;\r\n    const disabled = this.state.value === '' ? true : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header as=\"h4\">Would you rather</Header>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Field>\r\n            <Radio\r\n              label={question.optionOne.text}\r\n              name=\"radioGroup\"\r\n              value=\"optionOne\"\r\n              checked={this.state.value === 'optionOne'}\r\n              onChange={this.handleChange}\r\n            />\r\n            <br />\r\n            <Radio\r\n              label={question.optionTwo.text}\r\n              name=\"radioGroup\"\r\n              value=\"optionTwo\"\r\n              checked={this.state.value === 'optionTwo'}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Button\r\n              color=\"blue\"\r\n              size=\"tiny\"\r\n              fluid\r\n              positive\r\n              disabled={disabled}\r\n              content=\"Submit\"\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authUser, users }, { match }) {\r\n  // const { question_id } = match.params;\r\n  // const question = questions[question_id];\r\n  // const avtr = Object.value(users);\r\n\r\n  return {\r\n    authUser\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { handleSaveQuestionAnswer }\r\n)(PollQuestion);\r\n// export default PollQuestion;\r\n","export const colors = {\r\n  orange: {\r\n    name: 'orange',\r\n    hex: '#ba2121'\r\n  },\r\n  blue: {\r\n    name: 'blue',\r\n    hex: '#2185d0'\r\n  },\r\n  red: {\r\n    name: null,\r\n    hex: '#36f5eb'\r\n  }\r\n};\r\n\r\nexport const styles = {\r\n  primary: {\r\n    color: 'orange',\r\n    bgColor: 'honeydew'\r\n  },\r\n  secondary: {\r\n    color: 'blue',\r\n    bgColor: '#36f5eb'\r\n  }\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Header,\r\n  Segment,\r\n  Progress,\r\n  Label,\r\n  Button,\r\n  Icon\r\n} from 'semantic-ui-react';\r\nimport { styles } from '../utils/helpers';\r\n\r\nconst YourVoteLabel = () => (\r\n  <Label color=\"orange\" ribbon=\"right\" className=\"vote\">\r\n    <Icon name=\"check circle outline\" size=\"big\" className=\"compact\" />\r\n    <div style={{ float: 'right' }}>\r\n      Your\r\n      <br />\r\n      Vote\r\n    </div>\r\n  </Label>\r\n);\r\n\r\nexport class PollResult extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    question: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired\r\n  };\r\n  handleClick = () => {\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { question, user } = this.props;\r\n    const optionOneVotes = question.optionOne.votes.length;\r\n    const optionTwoVotes = question.optionTwo.votes.length;\r\n    const votesTotal = optionOneVotes + optionTwoVotes;\r\n    const userVote = user.answers[question.id];\r\n\r\n    let option1 = styles.secondary,\r\n      option2 = styles.secondary;\r\n    if (optionOneVotes > optionTwoVotes) {\r\n      option1 = styles.primary;\r\n    } else if (optionTwoVotes > optionOneVotes) {\r\n      option2 = styles.primary;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header as=\"h3\">\r\n          Results:\r\n          <Header.Subheader style={{ fontWeight: 'bold' }}>\r\n            Would you rather\r\n          </Header.Subheader>\r\n        </Header>\r\n        <Segment\r\n          color={option1.color}\r\n          style={{ backgroundColor: `${option1.bgColor}` }}\r\n        >\r\n          {userVote === 'optionOne' && <YourVoteLabel />}\r\n          <p style={{ fontWeight: 'bold' }}>{question.optionOne.text}</p>\r\n          <Progress\r\n            percent={((optionOneVotes / votesTotal) * 100).toFixed(2)}\r\n            progress\r\n            color={option1.color}\r\n          >\r\n            {optionOneVotes} out of {votesTotal} votes\r\n          </Progress>\r\n        </Segment>\r\n        <Segment\r\n          color={option2.color}\r\n          style={{ backgroundColor: `${option2.bgColor}` }}\r\n        >\r\n          {userVote === 'optionTwo' && <YourVoteLabel />}\r\n\r\n          <p style={{ fontWeight: 'bold' }}>{question.optionTwo.text}</p>\r\n          <Progress\r\n            percent={((optionTwoVotes / votesTotal) * 100).toFixed(2)}\r\n            progress\r\n            color={option2.color}\r\n          >\r\n            {optionTwoVotes} out of {votesTotal} votes\r\n          </Progress>\r\n        </Segment>\r\n        {/* <Form.Field> */}\r\n        <Button size=\"tiny\" floated=\"left\" onClick={this.handleClick}>\r\n          GO Back\r\n        </Button>\r\n        {/* </Form.Field> */}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users, authUser }) {\r\n  const user = users[authUser];\r\n  return {\r\n    user\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(PollResult));\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Header, Button } from 'semantic-ui-react';\r\nimport { colors } from '../utils/helpers';\r\n\r\nexport class PollTeaser extends Component {\r\n  static propTypes = {\r\n    question: PropTypes.object.isRequired,\r\n    unanswered: PropTypes.bool.isRequired\r\n  };\r\n  state = {\r\n    viewPoll: false\r\n  };\r\n  handleClick = e => {\r\n    this.setState(prevState => ({\r\n      viewPoll: !prevState.viewPoll\r\n    }));\r\n  };\r\n  render() {\r\n    const { question, unanswered } = this.props;\r\n    const buttonColor = unanswered === true ? colors.orange : colors.blue;\r\n    const buttonContent = unanswered === true ? 'Answer Poll' : 'Results';\r\n\r\n    if (this.state.viewPoll === true) {\r\n      return <Redirect push to={`/questions/${question.id}`} />;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Header as=\"h5\" textAlign=\"left\">\r\n          Would you rather\r\n        </Header>\r\n        <p style={{ textAlign: 'center' }}>\r\n          {question.optionOne.text}\r\n          <br />\r\n          or...\r\n        </p>\r\n        <Button\r\n          color={buttonColor.name}\r\n          size=\"tiny\"\r\n          fluid\r\n          onClick={this.handleClick}\r\n          content={buttonContent}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PollTeaser;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Segment, Header, Grid, Image } from 'semantic-ui-react';\r\nimport PollQuestion from './PollQuestion';\r\nimport PollResult from './PollResult';\r\nimport PollTeaser from './PollTeaser';\r\nimport { colors } from '../utils/helpers';\r\n\r\nconst pollTypes = {\r\n  POLL_TEASER: 'POLL_TEASER',\r\n  POLL_QUESTION: 'POLL_QUESTION',\r\n  POLL_RESULT: 'POLL_RESULT'\r\n};\r\n\r\nconst PollContent = props => {\r\n  const { pollType, question, unanswered } = props;\r\n\r\n  switch (pollType) {\r\n    case pollTypes.POLL_TEASER:\r\n      return <PollTeaser question={question} unanswered={unanswered} />;\r\n    case pollTypes.POLL_QUESTION:\r\n      return <PollQuestion question={question} />;\r\n    case pollTypes.POLL_RESULT:\r\n      return <PollResult question={question} />;\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\n// author.avatarURL => ternary operator (javascript). if you dont have a author.avatarURL value the operator is going to return null... in the first render\r\n\r\n// Render! functions executes depending on the component calling Render function\r\n\r\nexport class UserCard extends Component {\r\n  static propTypes = {\r\n    question: PropTypes.object,\r\n    author: PropTypes.object,\r\n    pollType: PropTypes.string,\r\n    unanswered: PropTypes.bool,\r\n    question_id: PropTypes.string\r\n  };\r\n  render() {\r\n    const {\r\n      author,\r\n      question,\r\n      pollType,\r\n      badPath,\r\n      unanswered = null\r\n    } = this.props;\r\n    console.log(this.props);\r\n    if (badPath === true) {\r\n      return <Redirect to=\"/questions/bad_id\" />;\r\n    }\r\n\r\n    const tabColor = unanswered === true ? colors.orange : colors.blue;\r\n    const borderTop =\r\n      unanswered === null\r\n        ? `1px solid ${colors.grey}`\r\n        : `2px solid ${tabColor.hex}`;\r\n    if (!author) return null;\r\n\r\n    return (\r\n      <Segment.Group>\r\n        <Header\r\n          as=\"h5\"\r\n          textAlign=\"left\"\r\n          block\r\n          attached=\"top\"\r\n          style={{ borderTop: borderTop }}\r\n        >\r\n          {author ? author.name : null} asks:\r\n        </Header>{' '}\r\n        <Grid divided padded>\r\n          <Grid.Row>\r\n            <Grid.Column width={5}>\r\n              <Image src={author ? author.avatarURL : null} />\r\n            </Grid.Column>\r\n            <Grid.Column width={11}>\r\n              <PollContent\r\n                pollType={pollType}\r\n                question={question}\r\n                unanswered={unanswered}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment.Group>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(\r\n  { users, questions, authUser },\r\n  { match, question_id }\r\n) {\r\n  let question,\r\n    author,\r\n    pollType,\r\n    badPath = false;\r\n  if (question_id !== undefined) {\r\n    question = questions[question_id];\r\n    author = users[question.author];\r\n    pollType = pollTypes.POLL_TEASER;\r\n  } else {\r\n    const { question_id } = match.params;\r\n    question = questions[question_id];\r\n    const user = users[authUser];\r\n\r\n    if (question === undefined) {\r\n      badPath = true;\r\n    } else {\r\n      author = users[question.author];\r\n      pollType = pollTypes.POLL_QUESTION;\r\n      if (Object.keys(user.answers).includes(question.id)) {\r\n        pollType = pollTypes.POLL_RESULT;\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    badPath,\r\n    question,\r\n    author,\r\n    pollType\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserCard);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport UserCard from './UserCard';\r\nimport { _getUsers } from './../utils/_DATA.js';\r\n\r\nexport class Home extends Component {\r\n  static propTypes = {\r\n    userQuestionData: PropTypes.object.isRequired\r\n  };\r\n  render() {\r\n    const { userQuestionData } = this.props;\r\n\r\n    return <Tab panes={panes({ userQuestionData })} className=\"tab\" />;\r\n  }\r\n}\r\nconst users = _getUsers();\r\n\r\nconst panes = props => {\r\n  const { userQuestionData } = props;\r\n  console.log(props);\r\n  return [\r\n    {\r\n      menuItem: 'Unanswered',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          {/* try to extract this function outside */}\r\n\r\n          {userQuestionData.answered.map(question => (\r\n            <UserCard\r\n              author={users}\r\n              key={question.id}\r\n              question_id={question.id}\r\n              unanswered={true}\r\n            />\r\n          ))}\r\n        </Tab.Pane>\r\n      )\r\n    },\r\n    {\r\n      menuItem: 'Answered',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          {userQuestionData.unanswered.map(question => (\r\n            <UserCard\r\n              author={users}\r\n              key={question.id}\r\n              question_id={question.id}\r\n              unanswered={false}\r\n            />\r\n          ))}\r\n        </Tab.Pane>\r\n      )\r\n    }\r\n  ];\r\n};\r\n\r\nfunction mapStateToProps({ authUser, users, questions }) {\r\n  const answeredIds = Object.keys(users[authUser].answers);\r\n  const answered = Object.values(questions)\r\n    .filter(question => !answeredIds.includes(question.id))\r\n    .sort((a, b) => b.timestamp - a.timestamp);\r\n  const unanswered = Object.values(questions)\r\n    .filter(question => answeredIds.includes(question.id))\r\n    .sort((a, b) => b.timestamp - a.timestamp);\r\n\r\n  return {\r\n    userQuestionData: {\r\n      answered,\r\n      unanswered\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Segment,\r\n  Header,\r\n  Grid,\r\n  Divider,\r\n  Form,\r\n  Dimmer,\r\n  Loader\r\n} from 'semantic-ui-react';\r\n// absolute imports at the top\r\n// relative imports at the buttom\r\n\r\nimport { handleSaveQuestion } from '../actions/questions';\r\n\r\nexport class NewPoll extends Component {\r\n  static propTypes = {\r\n    authUser: PropTypes.string.isRequired,\r\n    handleSaveQuestion: PropTypes.func.isRequired\r\n  };\r\n  state = {\r\n    validSubmit: false,\r\n    isLoading: false,\r\n    option1: '',\r\n    option2: ''\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { authUser, handleSaveQuestion } = this.props;\r\n    const { option1, option2 } = this.state;\r\n\r\n    new Promise((res, rej) => {\r\n      this.setState({ isLoading: true });\r\n      handleSaveQuestion(option1, option2, authUser);\r\n      setTimeout(() => res('success'), 1000);\r\n    }).then(() => {\r\n      this.setState({\r\n        option1: '',\r\n        option2: ''\r\n      });\r\n      this.setState({ validSubmit: true });\r\n    });\r\n  };\r\n  render() {\r\n    const disabled = this.state.option1 === '' || this.state.option2 === '';\r\n\r\n    if (this.state.validSubmit === true) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <Segment.Group>\r\n        <Header as=\"h3\" textAlign=\"left\" block attached=\"top\">\r\n          Create a New Poll\r\n        </Header>\r\n        <Grid padded>\r\n          <Grid.Column>\r\n            {this.state.isLoading && (\r\n              <Dimmer active inverted>\r\n                <Loader content=\"Updating\" />\r\n              </Dimmer>\r\n            )}\r\n            <p>Complete the question:</p>\r\n            <p>\r\n              <strong>Would you rather...</strong>\r\n            </p>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Input\r\n                id=\"option1\"\r\n                placeholder=\"Enter option one...\"\r\n                value={this.state.option1}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <Divider horizontal>Or</Divider>\r\n              <Form.Input\r\n                id=\"option2\"\r\n                placeholder=\"Enter option two...\"\r\n                value={this.state.option2}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <Form.Button positive size=\"tiny\" fluid disabled={disabled}>\r\n                Submit\r\n              </Form.Button>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment.Group>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authUser }) {\r\n  return {\r\n    authUser\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { handleSaveQuestion }\r\n)(NewPoll);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropType from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Label,\r\n  Divider\r\n} from 'semantic-ui-react';\r\n\r\nconst trophyColor = ['yellow', 'red', 'orange'];\r\n\r\nexport class Leaderboard extends Component {\r\n  static propType = {\r\n    leaderboardData: PropType.array.isRequired\r\n  };\r\n  render() {\r\n    const { leaderboardData } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        {leaderboardData.map((user, idx) => (\r\n          <Segment.Group key={user.id}>\r\n            <Label corner=\"left\" icon=\"trophy\" color={trophyColor[idx]} />\r\n            <Grid divided padded>\r\n              <Grid.Row>\r\n                <Grid.Column width={4} verticalAlign=\"middle\">\r\n                  <Image src={user.avatarURL} />\r\n                </Grid.Column>\r\n                <Grid.Column width={8}>\r\n                  <Header as=\"h3\" textAlign=\"left\">\r\n                    {user.name}\r\n                  </Header>\r\n                  <Grid>\r\n                    <Grid.Column width={12}>Answered questions</Grid.Column>\r\n                    <Grid.Column width={4}>{user.answerCount}</Grid.Column>\r\n                  </Grid>\r\n                  <Divider />\r\n                  <Grid>\r\n                    <Grid.Column width={12}>Created questions</Grid.Column>\r\n                    <Grid.Column width={4}>{user.questionCount}</Grid.Column>\r\n                  </Grid>\r\n                </Grid.Column>\r\n                <Grid.Column width={4} textAlign=\"center\">\r\n                  <Segment.Group>\r\n                    <Header as=\"h5\" block attached=\"top\" content=\"Score\" />\r\n                    <Segment>\r\n                      <Label circular color=\"blue\" size=\"big\">\r\n                        {user.questionCount + user.answerCount}\r\n                      </Label>\r\n                    </Segment>\r\n                  </Segment.Group>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment.Group>\r\n        ))}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  const leaderboardData = Object.values(users)\r\n    .map(user => ({\r\n      id: user.id,\r\n      name: user.name,\r\n      avatarURL: user.avatarURL,\r\n      answerCount: Object.values(user.answers).length,\r\n      questionCount: user.questions.length,\r\n      total: Object.values(user.answers).length + user.questions.length\r\n    }))\r\n    .sort((a, b) => a.total - b.total)\r\n    .reverse()\r\n    .slice(0, 3);\r\n  return {\r\n    leaderboardData\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard);\r\n","import React, { Component } from 'react';\r\nimport { Container, Header } from 'semantic-ui-react';\r\n\r\nexport class NoMatch extends Component {\r\n  render() {\r\n    return (\r\n      <Container textAlign=\"center\">\r\n        <Header as=\"h3\">No Match 404 Error</Header>\r\n        <p>Nothing to see here. Please use the menu to try again.</p>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoMatch;\r\n","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport { handleInitialData } from '../actions/shared';\nimport { connect } from 'react-redux';\nimport Login from './Login';\nimport Nav from './Nav';\nimport Home from './Home';\nimport UserCard from './UserCard';\nimport NewPoll from './NewPoll';\nimport Leaderboard from './Leaderboard';\nimport NoMatch from './NoMatch';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.handleInitialData();\n  }\n  render() {\n    const { authUser } = this.props;\n    return (\n      <Router>\n        <div className=\"App\">\n          {authUser === null ? (\n            <Route\n              render={() => (\n                <ContentGrid>\n                  <Login />\n                </ContentGrid>\n              )}\n            />\n          ) : (\n            <Fragment>\n              <Nav />\n              <ContentGrid>\n                <Switch>\n                  <Route exact path=\"/\" component={Home} />\n                  <Route path=\"/questions/bad_id\" component={NoMatch} />\n                  <Route path=\"/questions/:question_id\" component={UserCard} />\n                  <Route path=\"/add\" component={NewPoll} />\n                  <Route path=\"/leaderboard\" component={Leaderboard} />\n                  <Route component={NoMatch} />\n                </Switch>\n              </ContentGrid>\n            </Fragment>\n          )}\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ContentGrid = ({ children }) => (\n  <Grid padded=\"vertically\" columns={1} centered>\n    <Grid.Row>\n      <Grid.Column style={{ maxWidth: 550 }}>{children}</Grid.Column>\n    </Grid.Row>\n  </Grid>\n);\n\nfunction mapStateToProps({ authUser }) {\n  return {\n    authUser\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { handleInitialData }\n)(App);\n","import { getInitialData } from '../utils/api';\r\nimport { receiveQuestions } from '../actions/questions';\r\nimport { receiveUsers } from '../actions/users';\r\n\r\nexport function handleInitialData() {\r\n  return dispatch => {\r\n    return getInitialData().then(({ users, questions }) => {\r\n      dispatch(receiveQuestions(questions));\r\n      dispatch(receiveUsers(users));\r\n    });\r\n  };\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport authUser from '../reducers/authUser';\r\nimport questions from '../reducers/questions';\r\nimport users from '../reducers/users';\r\n\r\nexport default combineReducers({\r\n  authUser,\r\n  questions,\r\n  users\r\n});\r\n","import { SET_AUTH_USER } from '../actions/authUser';\r\n\r\nexport default function authUser(state = null, action) {\r\n  if (action.type === SET_AUTH_USER) {\r\n    return action.id;\r\n  }\r\n  return state;\r\n}\r\n","import {\r\n  RECEIVE_QUESTIONS,\r\n  ADD_ANSWER_TO_QUESTION,\r\n  ADD_QUESTION\r\n} from '../actions/questions';\r\n\r\nexport default function questions(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        ...action.questions\r\n      };\r\n    case ADD_ANSWER_TO_QUESTION:\r\n      const { authUser, qid, answer } = action;\r\n\r\n      return {\r\n        ...state,\r\n        [qid]: {\r\n          ...state[qid],\r\n          [answer]: {\r\n            ...state[qid][answer],\r\n            votes: state[qid][answer].votes.concat(authUser)\r\n          }\r\n        }\r\n      };\r\n    case ADD_QUESTION:\r\n      const { question } = action;\r\n\r\n      return {\r\n        ...state,\r\n        [question.id]: question\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  RECEIVE_USERS,\r\n  ADD_ANSWER_TO_USER,\r\n  ADD_QUESTION_TO_USER\r\n} from '../actions/users';\r\n\r\nexport default function users(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USERS:\r\n      return {\r\n        ...state,\r\n        ...action.users\r\n      };\r\n    case ADD_ANSWER_TO_USER:\r\n      const { authUser, qid, answer } = action;\r\n\r\n      return {\r\n        ...state,\r\n        [authUser]: {\r\n          ...state[authUser],\r\n          answers: {\r\n            ...state[authUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      };\r\n    case ADD_QUESTION_TO_USER:\r\n      const { id, author } = action;\r\n\r\n      return {\r\n        ...state,\r\n        [author]: {\r\n          ...state[author],\r\n          questions: state[author].questions.concat(id)\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const logger = store => next => action => {\r\n  console.group(action.type);\r\n  console.log('The action:', action);\r\n  const returnValue = next(action);\r\n  console.log('The new state: ', store.getState());\r\n  console.groupEnd();\r\n  return returnValue;\r\n};\r\n\r\nexport default logger;\r\n","import thunk from 'redux-thunk';\r\nimport logger from './logger';\r\nimport { applyMiddleware } from 'redux';\r\n\r\nexport default applyMiddleware(thunk, logger);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './components/mocks/App';\nimport App from './components/App';\nimport './index.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index';\nimport middleware from './middleware';\n\nconst store = createStore(rootReducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}